#!/usr/bin/perl
#
# b2c  :  银行应答 ---> 渠道应答 
#   插入流水
#
sub  {
    my ($self, $tran) = @_;
    my @cres;
    $cres[0]  = '0410';
    $cres[3]  = '200000';
    $cres[4]  = $tran->{bres}{amt};
    $cres[11] = $tran->{creq}[11];
    $cres[12] = $tran->{creq}[12];
    $cres[13] = $tran->{creq}[13];
    $cres[15] = $tran->{creq}[13];
    $cres[37] = substr($tran->{creq}[60], 2, 6).$tran->{creq}[11];
    $cres[39] = $tran->{bres}{resp};
    $cres[41] = $tran->{creq}[41];
    $cres[42] = $tran->{creq}[42];
    $cres[60] = $tran->{creq}[60];
    $cres[64] = 'MMMMMMMM';

    # 组织数据库流水
    my $log = {
        x_pan   => $cres[2],
        x_amt   => $cres[4],
        c_tkey  => $cres[37],
        b_tkey  => $tran->{bres}{ref_num},
        c_name  => $tran->{chnl},
        c_tcode => $tran->{c_tcode},
        c_mid   => $cres->[42],
        c_tid   => $cres->[41],
        c_req   => '',
        c_res   => '',
        c_resp  => $cres->[39],
        b_name  => $tran->{bank},
        b_tcode => $tran->{b_tcode},
        b_resp  => $tran->{bres}->{resp},
        b_req   => '',
        b_res   => '',
    };

    # 插入流水, 提交
    my $b_tkey = $tran->{bres}->{batch}.$tran->{bres}->{org};
    $self->{logger}->debug("插入流水:".$b_tkey);
    $self->{zcfg}{dbo}{ilog}->($log);
    
    my $log_co = $self->{zcfg}{dbo}{slog}->(($tran->{chnl}, $tran->{log_cod}->{can_key}));
    
    $self->{zcfg}{dbo}{ulog_rev}->($cres[37], $b_tkey);
    $self->{zcfg}{dbo}{ulog_can}->('', '', $log_co->{b_tkey});
    $self->{zcfg}{dbh}->commit();

    # 通知后线
    # i(insert)/r(rev)/c(can)
    $log->{_mode} = 'i';
    $self->notify_backend($log);
    
    my $l;
    $l->{_mode} = 'r';
    $l->{data} = [$cres[37], $b_tkey];
    $self->notify_backend($l);
    
    my $lo;
    $lo->{_mode} = 'c';
    $lo->{data} = ['', '', $log_co->{b_tkey}];
    $self->notify_backend($lo);
    

    return \@cres;
};

